grammar UriTemplate

  rule uri_template
	expansion
	/
	uri_part {
	  def value(env = {})
	    #"def uri_part value"
		text_value
	  end
	}
	/
	uri_template
  end
  
  rule expansion
    '{' key:alphanumeric+ '}' {
		def value(env={})
		  env[name]
		end
	    def name
			key.text_value
	    end
    } 
  end

  rule uri_part
	any* !'{'
  end

  rule varname
    alphanumeric
  end

  rule non_space_char
    ![ \n] .
  end

  # Any but not variable boundaries
  rule any
	.
  end

  rule whitespace
    [\s]*
  end

  rule alpha
    [A-Za-z_]
  end

  rule alphanumeric
    alpha / [0-9]
  end

  rule s	# Optional space
    S?
  end

  rule white
    [ \t\n\r]+
  end

end
