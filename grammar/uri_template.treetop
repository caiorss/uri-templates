grammar UriTemplate

  rule uri_template
    uri_element more_elements:(uri_element)* {
      def value(env={})
        uri_element.value(env) << more_elements.elements.map{|el| el.value(env)}.join
      end
    }
  end
  
  rule uri_element
    expansion / uri_part
  end

  rule expansion
    '{' key:varname+ '}' {
		def value(env={})
		  env[name]
		end
	    def name
			key.text_value
	    end
    } 
  end

  rule uri_part
   (alphanumeric+ / ':' / '/' / '.' / '?' / '&') {
          def value(env = {})
            #"def uri_part value"
            text_value
          end
        }
  end

  rule varname
    alphanumeric / '-' / '&' / '|' / '/' / ','
  end

  rule alpha
    [A-Za-z_]
  end

  rule alphanumeric
    alpha / [0-9]
  end

end
